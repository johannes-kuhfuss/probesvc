// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/johannes-kuhfuss/probesvc/domain (interfaces: FileRepository)

// Package domain is a generated GoMock package.
package domain

import (
	reflect "reflect"

	azblob "github.com/Azure/azure-sdk-for-go/sdk/storage/azblob"
	gomock "github.com/golang/mock/gomock"
)

// MockFileRepository is a mock of FileRepository interface.
type MockFileRepository struct {
	ctrl     *gomock.Controller
	recorder *MockFileRepositoryMockRecorder
}

// MockFileRepositoryMockRecorder is the mock recorder for MockFileRepository.
type MockFileRepositoryMockRecorder struct {
	mock *MockFileRepository
}

// NewMockFileRepository creates a new mock instance.
func NewMockFileRepository(ctrl *gomock.Controller) *MockFileRepository {
	mock := &MockFileRepository{ctrl: ctrl}
	mock.recorder = &MockFileRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileRepository) EXPECT() *MockFileRepositoryMockRecorder {
	return m.recorder
}

// GetClient mocks base method.
func (m *MockFileRepository) GetClient() *azblob.ServiceClient {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClient")
	ret0, _ := ret[0].(*azblob.ServiceClient)
	return ret0
}

// GetClient indicates an expected call of GetClient.
func (mr *MockFileRepositoryMockRecorder) GetClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClient", reflect.TypeOf((*MockFileRepository)(nil).GetClient))
}
